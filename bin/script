#!/usr/bin/env ruby --jit
require "bundler/setup"
require 'gossip'
puts "Ruby version: #{RUBY_VERSION}"

me = 'me'
pipe = Gossip::Pipe.simple
protocol = Gossip::Agent::SleepBased.new(pipe, me, ['root-1', 'root-2'])

# Protocol thread
Thread.new { protocol.run }
      .abort_on_exception = true


#Â Output thread (stdout)
Thread.new do
  loop do
    message = pipe.q_out.pop
    puts "Message from #{message.from} to #{message.to}: '#{message.type}'"
  end
end.abort_on_exception = true

# Input thread (stdin)
puts "Ready\n"
begin
  loop do
    input = gets
    break if input.nil?
    # TODO: Input
    ary = input.strip.split(' ')
    type = ary[1].gsub(/-/, "_").to_sym
    payload = type == :ping_req ? { target_id: ary[2] } : {}
    message = Gossip::Message.new(me, ary[0], type, payload)

    pipe.q_in << message
  end
rescue Interrupt
end
puts "\nDone"
